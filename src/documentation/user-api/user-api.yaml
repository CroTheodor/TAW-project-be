

/api/v1/employees:
  get:
    tags: 
        - Employees
    description: Returns the list of employees
    parameters:
      - in: query
        name: role
        schema:
          type: string
          enum: [ "Waiter", "Barman", "Cook", "Cassier"]
        required: false
    responses:
        200:
            description: Successfully retrieved the list
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/UserDTO'
        404:
            description: Not Found
#######################################################

/api/v1/employees/roles:
  get:
    tags: 
        - Employees
    description: Returns the list of available roles
    responses:
        200:
            description: Successfully retrieved the roles
            content:
              application/json:
                schema:
                  type: array
                  items:
                    schema:
                      type: string
        404:
            description: Not Found

#################################################################

/api/v1/employees/{id}:
  get:
    tags: 
        - Employees
    description: Return the employee based on id
    parameters:
      - name: id
        in: path
        description: Employee id
        required: true
        schema:
              type: string
    responses:
        200:
            description: Successfuly retrieved employee
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserDTO'
        404:
            description: Not Found
  put:
    tags: 
        - Employees
    parameters:
      - name: id
        in: path
        description: Employee id
        required: true
        schema:
          type: string
    description: Update an employee
    requestBody:
      required: true
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/UserDTO'
    responses:
        201:
            description: Update success
        404:
            description: Not Found
        400:
            description: Bad request
  delete:
    tags: 
        - Employees
    parameters:
    - name: id
      in: path
      description: Employee id
      required: true
      schema:
            type: string
    description: Deletes an employee

    responses:
        201:
            description: Delete success
        404:
            description: Not Found
        400:
            description: Bad request
##########################################################################

/auth/register:
  post:
      tags:
          - User
      summary: Register a user
      requestBody:
          required: true
          content:
              application/json:
                  schema:
                      $ref: '#/components/schemas/RegisterDTO'
      responses:
            200:
              description: Success
            409:
              description: Conflict
            500:
              description: Inernal Error

#####################################################################

/auth/login:
  post:
      tags:
          - User
      summary: Login an user
      requestBody:
          required: true
          content:
              application/json:
                  schema:
                      $ref: '#/components/schemas/RegisterDTO'
      responses:
            200:
              description: Success
            500:
              description: Inernal Error


#######################################################################


/auth/logout/{id}:
  get:
      tags:
          - User
      parameters:
      - name: id
        in: path
        description: Employee id
        required: true
        schema:
            type: string
      summary: Login out an user

      responses:
            200:
              description: Success
            500:
              description: Inernal Error